networks:
  supermarket:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "${NGNIX_HOST_PORT}:${NGNIX_DOCKER_CONTAINER_PORT}"
    volumes:
      - ./:/var/www/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - supermarket

  mysql:
    platform: linux/amd64
    image: mysql
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_DOCKER_CONTAINER_PORT}"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: storage
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - supermarket

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: unless-stopped
    tty: true
    working_dir: /var/www/app
    volumes:
      - ./:/var/www/app
    ports:
      - "${PHP_HOST_PORT}:${PHP_DOCKER_CONTAINER_PORT}"
    networks:
      - supermarket

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "${ELASTICSEARCH_HTTP_PORT}:${ELASTICSEARCH_HTTP_PORT}"
      - "${ELASTICSEARCH_TRANSPORT_PORT}:${ELASTICSEARCH_TRANSPORT_PORT}"
    networks:
      - supermarket